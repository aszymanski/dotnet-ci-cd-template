name: CI/CD - WebForms

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/app2_workflow.yaml'
      - 'WebApplication2/**'

env:
  SOLUTION_PATH: '.\WebApplication2\WebApplication2.sln'
  BUILD_CONFIG: 'Release'
  PLATFORM: Any Cpu
  DOTNET_VERSION: '4.7.2'
  PUBLISH_OUTPUT_PATH: 'published'
  ARTIFACT_NAME: 'application'

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup Nuget
      uses: nuget/setup-nuget@v1
      with:
        nuget-version: 'latest'

    - name: Setup MSBUILD
      uses: microsoft/setup-msbuild@v1.1

    - name: Restore packages 
      run: nuget restore ${{ env.SOLUTION_PATH }} -Verbosity Detailed -NonInteractive

    - name: MSBuild
      run: |
        msbuild ${{ env.SOLUTION_PATH }} /nologo /nr:false /p:DeployOnBuild=true /p:OutputPath="output" /p:WebProjectOutputDir="..\${{ env.PUBLISH_OUTPUT_PATH }}" /p:platform="${{ env.PLATFORM }}" /p:configuration="${{ env.BUILD_CONFIG }}"

    - name: Publish Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: .\WebApplication2\${{ env.PUBLISH_OUTPUT_PATH }}

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop'
    environment: DEV
    steps:

    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ${{ env.PUBLISH_OUTPUT_PATH }}
        
    - name: Zip package
      run: | 
        cd ${{ env.PUBLISH_OUTPUT_PATH }}
        zip -r ./${{ env.ARTIFACT_NAME }} .   

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'

  #   # - name: Configure Environmental Variables
  #   #   run: |
  #   #     az webapp config appsettings set --resource-group ${{ vars.RESOURCE_GROUP }} --name ${{ vars.WEB_APP_NAME }} --settings "<KEY>"=<VALUE>

    - name: Deploy to Dev
      run: |
        az webapp deployment source config-zip --resource-group ${{ vars.RESOURCE_GROUP }} --name ${{ vars.WEB_APP_NAME_2 }} --src ${{ env.PUBLISH_OUTPUT_PATH }}/${{ env.ARTIFACT_NAME }}.zip

  deploy-qa:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/staging'
    environment: QA
    
    steps:
    - name: Deployment
      uses: ./.github/workflows/common/deployment.yml




  # deploy-qa:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   if: github.ref == 'refs/heads/staging'
  #   steps:
  #   - name: Deploy to QA
  #     run: |
  #       # Add your deployment script here
  #     env:
  #       AZURE_WEBAPP_NAME: your-qa-app-name
  #       AZURE_RESOURCE_GROUP: your-qa-resource-group

  # deploy-prod:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #   - name: Deploy to Prod
  #     run: |
  #       # Add your deployment script here
  #     env:
  #       AZURE_WEBAPP_NAME: your-prod-app-name
  #       AZURE_RESOURCE_GROUP: your-prod-resource-group

  #   - name: Create Release
  #     id: create_release
  #     uses: actions/create-release@v1
  #     with:
  #       tag_name: ${{ github.sha }}
  #       release_name: Release ${{ github.sha }}
  #       draft: false
  #       prerelease: false
